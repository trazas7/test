// Minimal, HTML-first (keeps hyperlinks)

async function getWordText(task: { shouldSelectText: boolean; name: string }) {
  // 1) Selection (works in text boxes too)
  const selHtml = await getSelectionHtml();
  const minimizedSel = minimizeHtml(selHtml || "");
  if (minimizedSel?.trim()) return minimizedSel;

  // 2) Optional fallback: entire document body (as HTML)
  if (!task.shouldSelectText && task.name !== "AD_HOC") {
    return Word.run(async (ctx) => {
      const bodyHtml = ctx.document.body.getHtml();
      await ctx.sync();
      return minimizeHtml(bodyHtml.value || "");
    });
  }

  return "";
}

// Small helper: Common API (handles text boxes)
function getSelectionHtml(): Promise<string> {
  return new Promise((resolve) => {
    Office.context.document.getSelectedDataAsync(
      Office.CoercionType.Html,
      (res) => resolve(
        res.status === Office.AsyncResultStatus.Succeeded
          ? String(res.value || "")
          : ""
      )
    );
  });
}